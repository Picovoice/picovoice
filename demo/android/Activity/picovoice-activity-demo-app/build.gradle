apply plugin: 'com.android.application'

Properties properties = new Properties()
if (rootProject.file("local.properties").exists()) {
    properties.load(rootProject.file("local.properties").newDataInputStream())
    if (project.hasProperty("pvTestingAccessKey")) {
        properties.put("pvTestingAccessKey", project.getProperty("pvTestingAccessKey"))
    }
}

android {
    compileSdkVersion defaultTargetSdkVersion

    defaultConfig {
        applicationId "ai.picovoice.picovoicedemo"
        minSdkVersion 21
        targetSdkVersion defaultTargetSdkVersion
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        resValue 'string', 'pvTestingAccessKey', properties.getProperty("pvTestingAccessKey", "")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'ai.picovoice:picovoice-android:2.2.0'

    // Espresso UI Testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestImplementation('com.microsoft.appcenter:espresso-test-extension:1.4')
}

task copyResources(type: Copy) {
    from("$projectDir/../../../../resources/porcupine/resources/keyword_files/android/porcupine_android.ppn")
    from("$projectDir/../../../../resources/rhino/resources/contexts/android/smart_lighting_android.rhn")
    into "$projectDir/src/main/assets"
}

preBuild.dependsOn(copyResources)
